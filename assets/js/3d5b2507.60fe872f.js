"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[4967],{81084:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>g});var a=n(87462),r=(n(67294),n(3905));const i={title:"TRG 4.01 - Image tagging"},o=void 0,s={unversionedId:"release/trg-4/trg-4-1",id:"release/trg-4/trg-4-1",title:"TRG 4.01 - Image tagging",description:"| Author               | Status | Created     | Post-History                     |",source:"@site/docs/release/trg-4/trg-4-1.md",sourceDirName:"release/trg-4",slug:"/release/trg-4/trg-4-1",permalink:"/docs/release/trg-4/trg-4-1",draft:!1,editUrl:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs/release/trg-4/trg-4-1.md",tags:[],version:"current",frontMatter:{title:"TRG 4.01 - Image tagging"},sidebar:"developer",previous:{title:"TRG 3.02 - Persist Data",permalink:"/docs/release/trg-3/trg-3-2"},next:{title:"TRG 4.02 - Base images",permalink:"/docs/release/trg-4/trg-4-2"}},l={},g=[{value:"Description",id:"description",level:2},{value:"Why",id:"why",level:2},{value:"Process description",id:"process-description",level:3},{value:"Implementation",id:"implementation",level:3}],p={toc:g};function m(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Author"),(0,r.kt)("th",{parentName:"tr",align:null},"Status"),(0,r.kt)("th",{parentName:"tr",align:null},"Created"),(0,r.kt)("th",{parentName:"tr",align:null},"Post-History"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Catena-X System Team"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"10-Nov-2022"),(0,r.kt)("td",{parentName:"tr",align:null},"Initial release")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Catena-X System Team"),(0,r.kt)("td",{parentName:"tr",align:null},"Active"),(0,r.kt)("td",{parentName:"tr",align:null},"24-Nov-2022"),(0,r.kt)("td",{parentName:"tr",align:null},"more precise process description")))),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"The build process for Docker images must ensure proper image tagging. All images must be tagged\nfollowing ",(0,r.kt)("a",{parentName:"p",href:"https://semver.org/"},"semantic versioning"),", e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},":0.1.2")," as well as the latest image must be tagged in\naddition with ",(0,r.kt)("inlineCode",{parentName:"p"},":latest"),"."),(0,r.kt)("h2",{id:"why"},"Why"),(0,r.kt)("p",null,"We do that to easily identify the application version running in your container."),(0,r.kt)("p",null,"As these container images will be used in versioned Helm charts, using ",(0,r.kt)("inlineCode",{parentName:"p"},":latest")," as tag would destroy the idea of a\nversioned and released Helm chart, as a changed image could be injected without changing the Helm chart version. Proper\nDocker image tagging also helps you to match ",(0,r.kt)("a",{parentName:"p",href:"/docs/release/trg-5/trg-5-5#container-images"},"TRG 5.05"),"."),(0,r.kt)("h3",{id:"process-description"},"Process description"),(0,r.kt)("p",null,"If you follow our recommendation how to create Docker images and tag them, the following list describes the process\nsteps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create/edit your ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," and merge Changes via PullRequest to ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch, if changes where made in a feature\nbranch, or similar.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create/push a Git tag to ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch, e.g.:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'$ git pull\nremote: Enumerating objects: 129, done.\nremote: Counting objects: 100% (84/84), done.\nremote: Compressing objects: 100% (65/65), done.\nremote: Total 129 (delta 29), reused 11 (delta 10), pack-reused 45\n...\n$ git tag -a v1.2.3 -m "annotation text goes here"\n$ git push origin v1.2.3\n')),(0,r.kt)("admonition",{parentName:"li",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Git CLI will create tag on the latest (local) commit. Ensure to be up-to-date with the remote after,\notherwise ",(0,r.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Git-Basics-Tagging#_tagging_later"},"use commit ID")," while creating the\ntag.")),(0,r.kt)("admonition",{parentName:"li",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Prefer annotated tags over lightweight tags. Refer\nto ",(0,r.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Git-Basics-Tagging#_creating_tags"},"Git documentation")," about tags."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Pushing the tag will trigger the GH workflow to build your Docker image.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"After the finishing the build workflow, your repository will contain proper versioned Docker images, e.g.:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"SemVer Docker images",src:n(40964).Z,width:"745",height:"487"})))),(0,r.kt)("h3",{id:"implementation"},"Implementation"),(0,r.kt)("p",null,"Create a GitHub Workflow file with following content:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Build - Docker image (SemVer)\n\non:\n  push:\n    branches:\n      - main\n    # trigger events for SemVer like tags\n    tags:\n      - 'v*.*.*'\n      - 'v*.*.*-*'\n  pull_request:\n    branches:\n      - main\n\nenv:\n  # Use GH Container Registry instead of docker\n  # github.repository equals to <account|org>/<repo>\n  REGISTRY: ghcr.io\n  IMAGE_NAME: ${{ github.repository }}\n\njobs:\n  docker:\n    runs-on: ubuntu-latest\n    permissions:\n      packages: write\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n\n      # Create SemVer or ref tags dependent of trigger event\n      - name: Docker meta\n        id: meta\n        uses: docker/metadata-action@v4\n        with:\n          images: |\n            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\n          tags: |\n            type=ref,event=branch\n            type=ref,event=pr\n            type=semver,pattern={{version}}\n            type=semver,pattern={{major}}\n            type=semver,pattern={{major}}.{{minor}}\n\n      - name: Log into registry ${{ env.REGISTRY }}\n        if: github.event_name != 'pull_request'\n        uses: docker/login-action@v2\n        with:\n          registry: ${{ env.REGISTRY }}\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Build and push\n        uses: docker/build-push-action@v3\n        with:\n          context: .\n          push: ${{ github.event_name != 'pull_request' }}\n          tags: ${{ steps.meta.outputs.tags }}\n          labels: ${{ steps.meta.outputs.labels }}\n")))}m.isMDXComponent=!0},40964:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/trg4-1-semver-image-3960931216ff1d5dd1d80c11642d1514.png"}}]);