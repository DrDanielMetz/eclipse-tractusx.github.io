"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[2429],{29256:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"TRG 3.02 - Persist Data"},s=void 0,l={unversionedId:"release/trg-3/trg-3-2",id:"release/trg-3/trg-3-2",title:"TRG 3.02 - Persist Data",description:"| Author               | Status | Created      | Post-History  |",source:"@site/docs/release/trg-3/trg-3-2.md",sourceDirName:"release/trg-3",slug:"/release/trg-3/trg-3-2",permalink:"/docs/release/trg-3/trg-3-2",draft:!1,editUrl:"https://github.com/eclipse-tractusx/eclipse-tractusx.github.io/tree/main/docs/release/trg-3/trg-3-2.md",tags:[],version:"current",frontMatter:{title:"TRG 3.02 - Persist Data"},sidebar:"developer",previous:{title:"TRG 3.01 - Supported Versions",permalink:"/docs/release/trg-3/trg-3-1"},next:{title:"TRG 4.01 - Image tagging",permalink:"/docs/release/trg-4/trg-4-1"}},o={},p=[{value:"Description",id:"description",level:2},{value:"How",id:"how",level:2},{value:"How to expand volume in Kubernetes with ArgoCD",id:"how-to-expand-volume-in-kubernetes-with-argocd",level:3},{value:"Why",id:"why",level:2}],m={toc:p};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Author"),(0,r.kt)("th",{parentName:"tr",align:null},"Status"),(0,r.kt)("th",{parentName:"tr",align:null},"Created"),(0,r.kt)("th",{parentName:"tr",align:null},"Post-History"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Catena-X System Team"),(0,r.kt)("td",{parentName:"tr",align:null},"Draft"),(0,r.kt)("td",{parentName:"tr",align:null},"02-Jan-2023"),(0,r.kt)("td",{parentName:"tr",align:null},"n/a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Catena-X System Team"),(0,r.kt)("td",{parentName:"tr",align:null},"Moved"),(0,r.kt)("td",{parentName:"tr",align:null},"02-Jan-2023"),(0,r.kt)("td",{parentName:"tr",align:null},"content moved")))),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"Whenever data persistence is needed in Kubernetes the use of PersistentVolume and PersistentVolumeClaim resource is recommended. Therefore when a pod/deployment/statefulset resource is removed, data will still be available on the StorageClass's disk that was used."),(0,r.kt)("h2",{id:"how"},"How"),(0,r.kt)("p",null,"Example PersistentVolumeClaim:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# pvc.yaml\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: pvc-persistent-tmp-demo\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 50Mi\n")),(0,r.kt)("p",null,"This can be referenced in the volumes section of a Pod/Deployment/StatefulSet resource:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# deployment.yaml\n#...\n      volumes:\n        - name: pv-tmp-demo\n          persistentVolumeClaim:\n            claimName: pvc-persistent-tmp-demo\n#...\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"It is not recommended to directly request the claim in a StatefulSet! Rather create the PVC separately and reference that as an existing claim. See the example in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bitnami/charts/tree/main/bitnami/postgresql"},"Bitnami's Postgresql chart")," where an existing claim can be referenced for the primary database at the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bitnami/charts/tree/main/bitnami/postgresql#postgresql-primary-parameters"},"primary.persistence.existingClaim property"),".")),(0,r.kt)("h3",{id:"how-to-expand-volume-in-kubernetes-with-argocd"},"How to expand volume in Kubernetes with ArgoCD"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open ",(0,r.kt)("strong",{parentName:"p"},"ArgoCD")," in the desired environment and find the application.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Delete all Pod's that are attached to the volume. This also can be achieved by ",(0,r.kt)("strong",{parentName:"p"},"scaling a StatefulSet to 0 replicas"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Find the desired PersistenceVolumeClaim resource, click on it and press ",(0,r.kt)("strong",{parentName:"p"},"Edit"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Change the ",(0,r.kt)("strong",{parentName:"p"},"spec.resource.requests.storage")," property's value to the desired size.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save the changes and wait for them to take effect.\nThis can be found in the PVC's status section:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"status:\n  accessModes:\n    - ReadWriteOnce\n  capacity:\n    storage: 16Gi # DESIRED SIZE\n  phase: Bound\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Scale back the StatefulSet to the original replica count."))),(0,r.kt)("h2",{id:"why"},"Why"),(0,r.kt)("p",null,"In some cases where data has to be persisted, like applications with state Kubernetes needs to be configured to create Persistent Volumes that is attached to an underlying disk where data remains even after the deletion of the application."))}d.isMDXComponent=!0}}]);